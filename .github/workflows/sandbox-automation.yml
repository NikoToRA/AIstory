name: 🎮 Sandbox World Automation

on:
  schedule:
    - cron: '0 */6 * * *'  # 6時間ごとに実行
  workflow_dispatch:
    inputs:
      simulation_duration:
        description: 'Simulation duration (hours)'
        required: true
        default: '24'
        type: number
      simulation_speed:
        description: 'Simulation speed multiplier'
        required: true
        default: '10'
        type: number

jobs:
  sandbox-simulation:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install Dependencies
      run: |
        pip install requests numpy asyncio-compat
        
    - name: 🌍 Initialize Sandbox World
      run: |
        echo "🎮 Initializing AIstory Sandbox World..."
        cd sandbox-world/core
        python -c "
        import asyncio
        from sandbox_manager import SandboxManager
        import os
        
        async def init_world():
            sandbox = SandboxManager(
                world_data_path='../../',
                anthropic_api_key=os.getenv('ANTHROPIC_API_KEY')
            )
            
            success = await sandbox.initialize_world()
            if success:
                print('✅ World initialized successfully')
                return True
            else:
                print('❌ World initialization failed')
                return False
                
        result = asyncio.run(init_world())
        exit(0 if result else 1)
        "
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        
    - name: 🎭 Run Character Simulation
      run: |
        duration=${{ github.event.inputs.simulation_duration || 24 }}
        speed=${{ github.event.inputs.simulation_speed || 10 }}
        
        echo "🚀 Starting simulation: ${duration}h at ${speed}x speed"
        
        cd sandbox-world/core
        timeout 3600 python -c "
        import asyncio
        import os
        from sandbox_manager import SandboxManager
        
        async def run_simulation():
            sandbox = SandboxManager(
                world_data_path='../../',
                anthropic_api_key=os.getenv('ANTHROPIC_API_KEY')
            )
            
            # 世界初期化
            if not await sandbox.initialize_world():
                return False
            
            # シミュレーション速度設定
            sandbox.simulation_speed = float(os.getenv('SIMULATION_SPEED', '10'))
            
            # シミュレーション実行
            duration_hours = int(os.getenv('SIMULATION_DURATION', '24'))
            await sandbox.start_simulation(duration_hours=duration_hours)
            
            return True
            
        result = asyncio.run(run_simulation())
        print(f'Simulation completed: {result}')
        " || echo "Simulation completed (timeout reached)"
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        SIMULATION_DURATION: ${{ github.event.inputs.simulation_duration || 24 }}
        SIMULATION_SPEED: ${{ github.event.inputs.simulation_speed || 10 }}
        
    - name: 📊 Generate World Report
      run: |
        echo "📋 Generating world state report..."
        
        # 関係性マトリックスの確認
        if [ -f "sandbox-state/relationship_matrix.json" ]; then
          echo "## 💕 Relationship Matrix" >> world_report.md
          echo "$(jq -r '.total_relationships' sandbox-state/relationship_matrix.json) total relationships tracked" >> world_report.md
          echo "" >> world_report.md
        fi
        
        # ログファイルの確認
        if [ -d "sandbox-logs" ]; then
          echo "## 📝 Simulation Logs" >> world_report.md
          echo "Generated logs: $(ls sandbox-logs/*.json | wc -l) files" >> world_report.md
          echo "" >> world_report.md
        fi
        
        # キャラクター成長の確認
        echo "## 🎭 Character Growth" >> world_report.md
        for char_dir in story-world/characters/*/; do
          if [ -d "$char_dir" ]; then
            char_name=$(basename "$char_dir")
            if [ -f "$char_dir/memory.json" ]; then
              total_exp=$(jq -r '.total_experiences // 0' "$char_dir/memory.json")
              echo "- **$char_name**: $total_exp experiences" >> world_report.md
            fi
          fi
        done
        
    - name: 💾 Commit Simulation Results
      run: |
        git config --local user.email "sandbox@aistory.com"
        git config --local user.name "AIstory Sandbox System"
        
        if [[ -n $(git status --porcelain) ]]; then
          # 変更内容の要約
          changed_files=$(git diff --name-only | wc -l)
          new_files=$(git ls-files --others --exclude-standard | wc -l)
          
          git add .
          git commit -m "🎮 Sandbox Simulation Results
          
          Duration: ${{ github.event.inputs.simulation_duration || 24 }} hours
          Speed: ${{ github.event.inputs.simulation_speed || 10 }}x
          
          📊 Changes:
          - Modified files: $changed_files
          - New files: $new_files
          - Character interactions processed
          - Relationship dynamics updated
          - World state evolved
          
          🎭 Character Growth:
          $(cat world_report.md)
          
          🤖 Generated by AIstory Sandbox Automation"
          
          git push
          echo "✅ Simulation results committed"
        else
          echo "📝 No changes to commit"
        fi
        
    - name: 🔍 Analysis Summary
      run: |
        echo "## 🎮 Sandbox Simulation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Duration**: ${{ github.event.inputs.simulation_duration || 24 }} hours" >> $GITHUB_STEP_SUMMARY
        echo "**Speed**: ${{ github.event.inputs.simulation_speed || 10 }}x" >> $GITHUB_STEP_SUMMARY
        echo "**Completed**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "world_report.md" ]; then
          cat world_report.md >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 Key Outcomes" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Characters made autonomous decisions" >> $GITHUB_STEP_SUMMARY  
        echo "- ✅ Relationships evolved naturally" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Events generated organically" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ World state updated continuously" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Growth data accumulated" >> $GITHUB_STEP_SUMMARY
        
    - name: 🎉 Simulation Complete
      run: |
        echo "🎊 AIstory Sandbox World simulation completed successfully!"
        echo "📈 Characters have grown and evolved autonomously"
        echo "💕 Relationships have developed naturally"
        echo "🌍 The living world continues to breathe and grow"